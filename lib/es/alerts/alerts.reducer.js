/* eslint-disable import/prefer-default-export */
import { List, Map } from 'immutable';
import { TYPES } from './alerts.actions';
import INITIAL_STATE from './alerts.constants';

export function alertsReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE.alerts;
  var action = arguments[1];

  switch (action.type) {
    case TYPES.PLATFORM_ALERTS_SHOW:
      {
        return state.push(Map({
          id: action.id,
          type: action.alertType,
          message: action.message,
          onDismiss: action.onDismiss
        }));
      }
    case TYPES.PLATFORM_ALERTS_DISMISS_ALERT:
      {
        return state.filter(function (note) {
          return note.get('id') !== action.id;
        });
      }
    case TYPES.PLATFORM_ALERTS_DISMISS_ALL:
      {
        return List();
      }
    default:
      {
        return state;
      }
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hbGVydHMvYWxlcnRzLnJlZHVjZXIuanMiXSwibmFtZXMiOlsiTGlzdCIsIk1hcCIsIlRZUEVTIiwiSU5JVElBTF9TVEFURSIsImFsZXJ0c1JlZHVjZXIiLCJzdGF0ZSIsImFsZXJ0cyIsImFjdGlvbiIsInR5cGUiLCJQTEFURk9STV9BTEVSVFNfU0hPVyIsInB1c2giLCJpZCIsImFsZXJ0VHlwZSIsIm1lc3NhZ2UiLCJvbkRpc21pc3MiLCJQTEFURk9STV9BTEVSVFNfRElTTUlTU19BTEVSVCIsImZpbHRlciIsIm5vdGUiLCJnZXQiLCJQTEFURk9STV9BTEVSVFNfRElTTUlTU19BTEwiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsU0FBU0EsSUFBVCxFQUFlQyxHQUFmLFFBQTBCLFdBQTFCO0FBQ0EsU0FBU0MsS0FBVCxRQUFzQixrQkFBdEI7QUFDQSxPQUFPQyxhQUFQLE1BQTBCLG9CQUExQjs7QUFFQSxPQUFPLFNBQVNDLGFBQVQsR0FBNkQ7QUFBQSxNQUF0Q0MsS0FBc0MsdUVBQTlCRixjQUFjRyxNQUFnQjtBQUFBLE1BQVJDLE1BQVE7O0FBQ2xFLFVBQVFBLE9BQU9DLElBQWY7QUFDRSxTQUFLTixNQUFNTyxvQkFBWDtBQUFpQztBQUMvQixlQUFPSixNQUFNSyxJQUFOLENBQVdULElBQUk7QUFDcEJVLGNBQUlKLE9BQU9JLEVBRFM7QUFFcEJILGdCQUFNRCxPQUFPSyxTQUZPO0FBR3BCQyxtQkFBU04sT0FBT00sT0FISTtBQUlwQkMscUJBQVdQLE9BQU9PO0FBSkUsU0FBSixDQUFYLENBQVA7QUFNRDtBQUNELFNBQUtaLE1BQU1hLDZCQUFYO0FBQTBDO0FBQ3hDLGVBQU9WLE1BQU1XLE1BQU4sQ0FBYTtBQUFBLGlCQUFRQyxLQUFLQyxHQUFMLENBQVMsSUFBVCxNQUFtQlgsT0FBT0ksRUFBbEM7QUFBQSxTQUFiLENBQVA7QUFDRDtBQUNELFNBQUtULE1BQU1pQiwyQkFBWDtBQUF3QztBQUN0QyxlQUFPbkIsTUFBUDtBQUNEO0FBQ0Q7QUFBUztBQUNQLGVBQU9LLEtBQVA7QUFDRDtBQWpCSDtBQW1CRCIsImZpbGUiOiJhbGVydHMucmVkdWNlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIGltcG9ydC9wcmVmZXItZGVmYXVsdC1leHBvcnQgKi9cbmltcG9ydCB7IExpc3QsIE1hcCB9IGZyb20gJ2ltbXV0YWJsZSc7XG5pbXBvcnQgeyBUWVBFUyB9IGZyb20gJy4vYWxlcnRzLmFjdGlvbnMnO1xuaW1wb3J0IElOSVRJQUxfU1RBVEUgZnJvbSAnLi9hbGVydHMuY29uc3RhbnRzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGFsZXJ0c1JlZHVjZXIoc3RhdGUgPSBJTklUSUFMX1NUQVRFLmFsZXJ0cywgYWN0aW9uKSB7XG4gIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICBjYXNlIFRZUEVTLlBMQVRGT1JNX0FMRVJUU19TSE9XOiB7XG4gICAgICByZXR1cm4gc3RhdGUucHVzaChNYXAoe1xuICAgICAgICBpZDogYWN0aW9uLmlkLFxuICAgICAgICB0eXBlOiBhY3Rpb24uYWxlcnRUeXBlLFxuICAgICAgICBtZXNzYWdlOiBhY3Rpb24ubWVzc2FnZSxcbiAgICAgICAgb25EaXNtaXNzOiBhY3Rpb24ub25EaXNtaXNzLFxuICAgICAgfSkpO1xuICAgIH1cbiAgICBjYXNlIFRZUEVTLlBMQVRGT1JNX0FMRVJUU19ESVNNSVNTX0FMRVJUOiB7XG4gICAgICByZXR1cm4gc3RhdGUuZmlsdGVyKG5vdGUgPT4gbm90ZS5nZXQoJ2lkJykgIT09IGFjdGlvbi5pZCk7XG4gICAgfVxuICAgIGNhc2UgVFlQRVMuUExBVEZPUk1fQUxFUlRTX0RJU01JU1NfQUxMOiB7XG4gICAgICByZXR1cm4gTGlzdCgpO1xuICAgIH1cbiAgICBkZWZhdWx0OiB7XG4gICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxuICB9XG59XG4iXX0=