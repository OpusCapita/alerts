'use strict';

exports.__esModule = true;
exports.OCAlert = exports.TYPES = undefined;

var _v = require('uuid/v1');

var _v2 = _interopRequireDefault(_v);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } } /* eslint-disable class-methods-use-this */


var TYPES = exports.TYPES = {
  PLATFORM_ALERTS_SHOW: 'PLATFORM_ALERTS_SHOW',
  PLATFORM_ALERTS_DISMISS_ALERT: 'PLATFORM_ALERTS_DISMISS_ALERT',
  PLATFORM_ALERTS_DISMISS_ALL: 'PLATFORM_ALERTS_DISMISS_ALL'
};

var DEFAULT_TIMEOUT = 1500;

var getId = function getId() {
  return (0, _v2.default)();
};

var OCAlertComponent = function OCAlertComponent() {
  var _this = this;

  _classCallCheck(this, OCAlertComponent);

  this.setStore = function (store) {
    _this.store = store;
  };

  this.alertSuccess = function (message) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var id = getId();
    var opts = Object.assign({}, { timeOut: DEFAULT_TIMEOUT }, options);
    _this.showAlert(id, 'success', message, opts);
    return id;
  };

  this.alertInfo = function (message) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var id = getId();
    var opts = Object.assign({}, { timeOut: DEFAULT_TIMEOUT }, options);
    _this.showAlert(id, 'info', message, opts);
    return id;
  };

  this.alertWarning = function (message) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var id = getId();
    var opts = Object.assign({}, options);
    _this.showAlert(id, 'warning', message, opts);
    return id;
  };

  this.alertError = function (message) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var id = getId();
    var opts = Object.assign({}, options);
    _this.showAlert(id, 'danger', message, opts);
    return id;
  };

  this.closeAlert = function (id) {
    _this.store.dispatch({
      id: id,
      type: TYPES.PLATFORM_ALERTS_DISMISS_ALERT
    });
  };

  this.closeAlerts = function () {
    _this.store.dispatch({
      type: TYPES.PLATFORM_ALERTS_DISMISS_ALL
    });
  };

  this.showAlert = function (id, type, message, options) {
    _this.store.dispatch({
      id: id,
      type: TYPES.PLATFORM_ALERTS_SHOW,
      alertType: type,
      message: message
    });
    if (options.timeOut) {
      setTimeout(function () {
        return _this.closeAlert(id);
      }, options.timeOut);
    }
  };

  this.store = undefined;
};

var OCAlert = exports.OCAlert = new OCAlertComponent();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hbGVydHMvYWxlcnRzLmFjdGlvbnMuanMiXSwibmFtZXMiOlsiVFlQRVMiLCJQTEFURk9STV9BTEVSVFNfU0hPVyIsIlBMQVRGT1JNX0FMRVJUU19ESVNNSVNTX0FMRVJUIiwiUExBVEZPUk1fQUxFUlRTX0RJU01JU1NfQUxMIiwiREVGQVVMVF9USU1FT1VUIiwiZ2V0SWQiLCJPQ0FsZXJ0Q29tcG9uZW50Iiwic2V0U3RvcmUiLCJzdG9yZSIsImFsZXJ0U3VjY2VzcyIsIm1lc3NhZ2UiLCJvcHRpb25zIiwiaWQiLCJvcHRzIiwiT2JqZWN0IiwiYXNzaWduIiwidGltZU91dCIsInNob3dBbGVydCIsImFsZXJ0SW5mbyIsImFsZXJ0V2FybmluZyIsImFsZXJ0RXJyb3IiLCJjbG9zZUFsZXJ0IiwiZGlzcGF0Y2giLCJ0eXBlIiwiY2xvc2VBbGVydHMiLCJhbGVydFR5cGUiLCJzZXRUaW1lb3V0IiwidW5kZWZpbmVkIiwiT0NBbGVydCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQTs7Ozs7OzBKQURBOzs7QUFHTyxJQUFNQSx3QkFBUTtBQUNuQkMsd0JBQXNCLHNCQURIO0FBRW5CQyxpQ0FBK0IsK0JBRlo7QUFHbkJDLCtCQUE2QjtBQUhWLENBQWQ7O0FBTVAsSUFBTUMsa0JBQWtCLElBQXhCOztBQUVBLElBQU1DLFFBQVEsU0FBUkEsS0FBUTtBQUFBLFNBQU0sa0JBQU47QUFBQSxDQUFkOztJQUVNQyxnQixHQUNKLDRCQUFjO0FBQUE7O0FBQUE7O0FBQUEsT0FJZEMsUUFKYyxHQUlILFVBQUNDLEtBQUQsRUFBVztBQUNwQixVQUFLQSxLQUFMLEdBQWFBLEtBQWI7QUFDRCxHQU5hOztBQUFBLE9BUWRDLFlBUmMsR0FRQSxVQUFDQyxPQUFELEVBQTJCO0FBQUEsUUFBakJDLE9BQWlCLHVFQUFQLEVBQU87O0FBQ3ZDLFFBQU1DLEtBQUtQLE9BQVg7QUFDQSxRQUFNUSxPQUFPQyxPQUFPQyxNQUFQLENBQWMsRUFBZCxFQUFrQixFQUFFQyxTQUFTWixlQUFYLEVBQWxCLEVBQWdETyxPQUFoRCxDQUFiO0FBQ0EsVUFBS00sU0FBTCxDQUFlTCxFQUFmLEVBQW1CLFNBQW5CLEVBQThCRixPQUE5QixFQUF1Q0csSUFBdkM7QUFDQSxXQUFPRCxFQUFQO0FBQ0QsR0FiYTs7QUFBQSxPQWVkTSxTQWZjLEdBZUYsVUFBQ1IsT0FBRCxFQUEyQjtBQUFBLFFBQWpCQyxPQUFpQix1RUFBUCxFQUFPOztBQUNyQyxRQUFNQyxLQUFLUCxPQUFYO0FBQ0EsUUFBTVEsT0FBT0MsT0FBT0MsTUFBUCxDQUFjLEVBQWQsRUFBa0IsRUFBRUMsU0FBU1osZUFBWCxFQUFsQixFQUFnRE8sT0FBaEQsQ0FBYjtBQUNBLFVBQUtNLFNBQUwsQ0FBZUwsRUFBZixFQUFtQixNQUFuQixFQUEyQkYsT0FBM0IsRUFBb0NHLElBQXBDO0FBQ0EsV0FBT0QsRUFBUDtBQUNELEdBcEJhOztBQUFBLE9Bc0JkTyxZQXRCYyxHQXNCQyxVQUFDVCxPQUFELEVBQTJCO0FBQUEsUUFBakJDLE9BQWlCLHVFQUFQLEVBQU87O0FBQ3hDLFFBQU1DLEtBQUtQLE9BQVg7QUFDQSxRQUFNUSxPQUFPQyxPQUFPQyxNQUFQLENBQWMsRUFBZCxFQUFrQkosT0FBbEIsQ0FBYjtBQUNBLFVBQUtNLFNBQUwsQ0FBZUwsRUFBZixFQUFtQixTQUFuQixFQUE4QkYsT0FBOUIsRUFBdUNHLElBQXZDO0FBQ0EsV0FBT0QsRUFBUDtBQUNELEdBM0JhOztBQUFBLE9BNkJkUSxVQTdCYyxHQTZCRCxVQUFDVixPQUFELEVBQTJCO0FBQUEsUUFBakJDLE9BQWlCLHVFQUFQLEVBQU87O0FBQ3RDLFFBQU1DLEtBQUtQLE9BQVg7QUFDQSxRQUFNUSxPQUFPQyxPQUFPQyxNQUFQLENBQWMsRUFBZCxFQUFrQkosT0FBbEIsQ0FBYjtBQUNBLFVBQUtNLFNBQUwsQ0FBZUwsRUFBZixFQUFtQixRQUFuQixFQUE2QkYsT0FBN0IsRUFBc0NHLElBQXRDO0FBQ0EsV0FBT0QsRUFBUDtBQUNELEdBbENhOztBQUFBLE9Bb0NkUyxVQXBDYyxHQW9DRCxVQUFDVCxFQUFELEVBQVE7QUFDbkIsVUFBS0osS0FBTCxDQUFXYyxRQUFYLENBQW9CO0FBQ2xCVixZQURrQjtBQUVsQlcsWUFBTXZCLE1BQU1FO0FBRk0sS0FBcEI7QUFJRCxHQXpDYTs7QUFBQSxPQTJDZHNCLFdBM0NjLEdBMkNBLFlBQU07QUFDbEIsVUFBS2hCLEtBQUwsQ0FBV2MsUUFBWCxDQUFvQjtBQUNsQkMsWUFBTXZCLE1BQU1HO0FBRE0sS0FBcEI7QUFHRCxHQS9DYTs7QUFBQSxPQWlEZGMsU0FqRGMsR0FpREYsVUFBQ0wsRUFBRCxFQUFLVyxJQUFMLEVBQVdiLE9BQVgsRUFBb0JDLE9BQXBCLEVBQWdDO0FBQzFDLFVBQUtILEtBQUwsQ0FBV2MsUUFBWCxDQUFvQjtBQUNsQlYsWUFEa0I7QUFFbEJXLFlBQU12QixNQUFNQyxvQkFGTTtBQUdsQndCLGlCQUFXRixJQUhPO0FBSWxCYjtBQUprQixLQUFwQjtBQU1BLFFBQUlDLFFBQVFLLE9BQVosRUFBcUI7QUFDbkJVLGlCQUFXO0FBQUEsZUFBTSxNQUFLTCxVQUFMLENBQWdCVCxFQUFoQixDQUFOO0FBQUEsT0FBWCxFQUFzQ0QsUUFBUUssT0FBOUM7QUFDRDtBQUNGLEdBM0RhOztBQUNaLE9BQUtSLEtBQUwsR0FBYW1CLFNBQWI7QUFDRCxDOztBQTRESSxJQUFNQyw0QkFBVSxJQUFJdEIsZ0JBQUosRUFBaEIiLCJmaWxlIjoiYWxlcnRzLmFjdGlvbnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBjbGFzcy1tZXRob2RzLXVzZS10aGlzICovXG5pbXBvcnQgdXVpZHYxIGZyb20gJ3V1aWQvdjEnO1xuXG5leHBvcnQgY29uc3QgVFlQRVMgPSB7XG4gIFBMQVRGT1JNX0FMRVJUU19TSE9XOiAnUExBVEZPUk1fQUxFUlRTX1NIT1cnLFxuICBQTEFURk9STV9BTEVSVFNfRElTTUlTU19BTEVSVDogJ1BMQVRGT1JNX0FMRVJUU19ESVNNSVNTX0FMRVJUJyxcbiAgUExBVEZPUk1fQUxFUlRTX0RJU01JU1NfQUxMOiAnUExBVEZPUk1fQUxFUlRTX0RJU01JU1NfQUxMJyxcbn07XG5cbmNvbnN0IERFRkFVTFRfVElNRU9VVCA9IDE1MDA7XG5cbmNvbnN0IGdldElkID0gKCkgPT4gdXVpZHYxKCk7XG5cbmNsYXNzIE9DQWxlcnRDb21wb25lbnQge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLnN0b3JlID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgc2V0U3RvcmUgPSAoc3RvcmUpID0+IHtcbiAgICB0aGlzLnN0b3JlID0gc3RvcmU7XG4gIH1cblxuICBhbGVydFN1Y2Nlc3MgPShtZXNzYWdlLCBvcHRpb25zID0ge30pID0+IHtcbiAgICBjb25zdCBpZCA9IGdldElkKCk7XG4gICAgY29uc3Qgb3B0cyA9IE9iamVjdC5hc3NpZ24oe30sIHsgdGltZU91dDogREVGQVVMVF9USU1FT1VUIH0sIG9wdGlvbnMpO1xuICAgIHRoaXMuc2hvd0FsZXJ0KGlkLCAnc3VjY2VzcycsIG1lc3NhZ2UsIG9wdHMpO1xuICAgIHJldHVybiBpZDtcbiAgfVxuXG4gIGFsZXJ0SW5mbyA9IChtZXNzYWdlLCBvcHRpb25zID0ge30pID0+IHtcbiAgICBjb25zdCBpZCA9IGdldElkKCk7XG4gICAgY29uc3Qgb3B0cyA9IE9iamVjdC5hc3NpZ24oe30sIHsgdGltZU91dDogREVGQVVMVF9USU1FT1VUIH0sIG9wdGlvbnMpO1xuICAgIHRoaXMuc2hvd0FsZXJ0KGlkLCAnaW5mbycsIG1lc3NhZ2UsIG9wdHMpO1xuICAgIHJldHVybiBpZDtcbiAgfVxuXG4gIGFsZXJ0V2FybmluZyA9IChtZXNzYWdlLCBvcHRpb25zID0ge30pID0+IHtcbiAgICBjb25zdCBpZCA9IGdldElkKCk7XG4gICAgY29uc3Qgb3B0cyA9IE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMpO1xuICAgIHRoaXMuc2hvd0FsZXJ0KGlkLCAnd2FybmluZycsIG1lc3NhZ2UsIG9wdHMpO1xuICAgIHJldHVybiBpZDtcbiAgfVxuXG4gIGFsZXJ0RXJyb3IgPSAobWVzc2FnZSwgb3B0aW9ucyA9IHt9KSA9PiB7XG4gICAgY29uc3QgaWQgPSBnZXRJZCgpO1xuICAgIGNvbnN0IG9wdHMgPSBPYmplY3QuYXNzaWduKHt9LCBvcHRpb25zKTtcbiAgICB0aGlzLnNob3dBbGVydChpZCwgJ2RhbmdlcicsIG1lc3NhZ2UsIG9wdHMpO1xuICAgIHJldHVybiBpZDtcbiAgfVxuXG4gIGNsb3NlQWxlcnQgPSAoaWQpID0+IHtcbiAgICB0aGlzLnN0b3JlLmRpc3BhdGNoKHtcbiAgICAgIGlkLFxuICAgICAgdHlwZTogVFlQRVMuUExBVEZPUk1fQUxFUlRTX0RJU01JU1NfQUxFUlQsXG4gICAgfSk7XG4gIH1cblxuICBjbG9zZUFsZXJ0cyA9ICgpID0+IHtcbiAgICB0aGlzLnN0b3JlLmRpc3BhdGNoKHtcbiAgICAgIHR5cGU6IFRZUEVTLlBMQVRGT1JNX0FMRVJUU19ESVNNSVNTX0FMTCxcbiAgICB9KTtcbiAgfVxuXG4gIHNob3dBbGVydCA9IChpZCwgdHlwZSwgbWVzc2FnZSwgb3B0aW9ucykgPT4ge1xuICAgIHRoaXMuc3RvcmUuZGlzcGF0Y2goe1xuICAgICAgaWQsXG4gICAgICB0eXBlOiBUWVBFUy5QTEFURk9STV9BTEVSVFNfU0hPVyxcbiAgICAgIGFsZXJ0VHlwZTogdHlwZSxcbiAgICAgIG1lc3NhZ2UsXG4gICAgfSk7XG4gICAgaWYgKG9wdGlvbnMudGltZU91dCkge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLmNsb3NlQWxlcnQoaWQpLCBvcHRpb25zLnRpbWVPdXQpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgY29uc3QgT0NBbGVydCA9IG5ldyBPQ0FsZXJ0Q29tcG9uZW50KCk7XG4iXX0=